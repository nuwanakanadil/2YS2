const path = require('path');
const fs = require('fs');
const HtmlPdfService = require('../services/htmlPdfService');

(async ()=>{
  try {
    const sampleWaste = {
      title: 'Waste Analysis',
      subtitle: 'Weekly summary',
      generatedAt: new Date().toLocaleString(),
      kpis: [
        { label: 'Total Expired', value: '265' },
        { label: 'Waste Value', value: 'LKR 63,150.00' },
        { label: 'Expiration Events', value: '23' }
      ],
      tableTitle: 'Top Waste Items',
      headers: ['#','Item','Category','Expired Units','Waste Value','Events','Waste %'],
      rows: [
        [1,'Grilled Chicken Caesar Salad','Breakfast & Brunch Items','95','LKR 26,125.00','7','55.88%'],
        [2,'Breakfast Burrito','Breakfast & Brunch Items','42','LKR 16,800.00','3','47.19%'],
        [3,'Turkey & Swiss','Breakfast & Brunch Items','34','LKR 6,800.00','4','89.47%']
      ],
      footerNote: 'Generated by MealMatrix'
    };

    const outDir = path.join(__dirname, '..', 'tmp');
    if (!fs.existsSync(outDir)) fs.mkdirSync(outDir, { recursive: true });
    const outPath = path.join(outDir, 'waste-analysis-html.pdf');
    console.log('Generating HTML-based PDF to', outPath);
    await HtmlPdfService.generatePdfFromTemplate(sampleWaste, outPath);
    console.log('Wrote', outPath);
  } catch (e) {
    console.error('Failed to generate HTML report:', e);
    process.exit(1);
  }
})();
